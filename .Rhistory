args(x + y)
args(c)
args(graphics::plot.default)
library("swirl")
swirl()
x <- 5 + 7
x
y <- x - 3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
z <- c(z, 555)
z <- c(z, 555, z)
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
traceback
debug
browser
trace
mean(x)
traceback
traceback()
lm(y - x)
traceback()
debug(lm)
lm(y - x)
options(error = recover)
?options
read.csv("nosuchfile")
b
v
1
library(dataset)
0
0
x
library(dataset)
library(datasets)
data(iris)
?iris
iris
names(iris)
iris$Sepal.Length
mean(iris$Sepal.length)
mean(iris$Sepal.Length)
names(iris)
?split
iris.Species
iris$Species
l <- iris$Species
split(iris,l)
split <- split(iris,l)
mean(split$verginica)
mean(split$virginica)
split
split[virginica]
split$virginica
split$virginica$Sepal.Length
mean(split$virginica$Sepal.Length)
colMeans(iris)
apply(iris, 1, mean)
apply(iris, 2, mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
hp <- tapply(mtcars$hp, mtcars$cyl, mean)
hp
hp(1)
hp$4
hp[,4]
hp[,"4"]
hp
class(hp)
hp(1,1)
hp[1,1]
?as.numeric
?as.vector
as.vector(hp)
hp <- as.vector(hp)
hp(1)
hp[1]
abs(hp[1],hp[3])
?abs
abs(hp[1] - hp[3])
debug(ls)
ls
ls()
set.seed(1)
rpois(5,2)
set.seed(10)
x <- (0:1, each = 5)
x <- rep(0:1, each = 5)
x
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
?stack
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
summaryRprof()
$by.total
library(swirl)
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
dir.create(testdir)
?dir.create
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
?file.rename
file.rename("mytest.R", "mytest2,R")
info()
skip()
file.copy("mytest2.R", "mytest3.R")
file.path('mytest3.R')
?file.path
file.path('folder1')
file.path('folder1', 'folder2')
?dir.create
dir.create("testdir2","testdir3", recursive = TRUE)
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
unlink('testdir2', recursive = TRUE)
setwd(old.dir)
unlink('testdir')
unlink('testdir', recursive = TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0, 10, by=0.5)
seq(5,10,length=30)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each =10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = "")
paste(my_char, collapse = " ")
c(my_char, "Yukai Zou")
poste(c(my_char, "Yukai Zou")," ")
paste(c(my_char, "Yukai Zou")," ")
c(my_char, "Yukai"))
c(my_char, "Yukai")
my_name <- c(my_char, "Yukai Zou")
my_name
paste(my_name, " ")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
c(44, NA, 5, NA)
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
library(swirl)
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
my_data <- colnames(cnames)
colnames(my_data) <- cnames
my_data
library("swirl")
install_from_swirl("Exploratory Data Analysis")
swirl()
install.packages("sqldf")
library(sqldf)
library("swirl")
swirl()
library(swirl)
swirl()
swirl
swirl()
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataFrame <- data.frame(x = x, y = y)
dist(dataFrame)
distxy <- dist(dataFrame)
hClustering <- hclust(distxy)
plot(hClustering)
dataFrame <- data.frame( x = x, y = y)
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
heatmap(dataMatri)
heatmap(dataMatrix)
choose(8, 7)
choose(8, 8)
choose(8, 7) * 0.5^8 + choose(8, 8) * 0.5^8
pbinom(6, size = 8, prob = 0.5, lower.tail = FALSE)
qnorm(0.95, mean = mu, sd = sd)
qnorm(0.95, mean = 0, sd = 1)
pnorm(2, mean = 0, sd = 1)
pnorm(2.5, mean = 0, sd = 1)
ppois(3, lambda = 2.5 * 4)
pbinom(2, size = 500, prob = 0.01)
ppois(2, lambda = 500 * 0.01)
pnorm(70, mean = 80, sd = 10)
qnorm(0.95, mean = 1100, sd = 75)
choose(5, 4) * 0.5^5 + choose(5, 5) * 0.5^5
data(sheep)
data(sleep)
head(sleep)
g1 <- sleep$extra[1:10]; g2 <- sleep$extra[11:20]
difference <- g2 - g1
mn <- mean(difference); s <- sd(difference); n <- 10
mn + c(-1, 1) * qt(0.975, n-1) * s / sqrt(n)
t.test(difference)
t.test(g2, g1, paired = TRUE)
t.test(extra ~ I(relevel(group, 2)), paired = TRUE, data = sleep)
library(reshape2)
library(datasets)
data(ChickWeight)
head(ChickWeight)
wideCW <- dcast(ChickWeight, Diet + Chick ~ Time, value.var = "weight")
names(wideCW)[-(1:2)]
names(wideCW)[-(1:2)] <- paste("time", names(wideCW)[-(1:2)], sep = "")
names(wideCW)[-(1:2)]
names(wideCW)
library(dplyr)
install.packages("dplyr")
library(dplyr)
wideCW <- mutate(wideCW, gain = time21 - time0)
wideCW
qt(0.975, 8 + 21 - 2)
?qt
qt(0.975, 15.04)
pexp(6, 1/5, lower.tail = FALSE)
qexp(0.25, 1/5)
library(swirl)
swirl()
myplot(2)
myplot(20)
myplot2(2)
qt(0.975, df = 2)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g2 - g1
mean(difference)
s <- sd(difference)
mean(difference) + c(-1,1) * qt(0.975, 9) * s/sqrt(10)
mn + c(-1,1) * qt(0.975, 9) * s/sqrt(10)
t.test(difference)$conf.int
sp <- (8-1)*15.34^2 + (21-1)*18.23^2
ns <- (8-1) + (21-1)
sp <- sqrt(sp/ns)
(132.86 - 127.44) + c(-1,1)*qt(0.975, 8+21-2)*sp*sqrt(1/8 + 1/21)
ns
(132.86 - 127.44) + c(-1,1)*qt(0.975, 27)*sp*sqrt(1/8 + 1/21)
(132.86 - 127.44) + c(-1,1)*qt(0.975, ns)*sp*sqrt(1/8 + 1/21)
132.86 - 127.44 + c(-1,1)*qt(0.975, ns)*sp*sqrt(1/8 + 1/21)
sqrt((9*var(g1) + 9*var(g2))/18)
sp <- sqrt((9*var(g1) + 9*var(g2))/18)
md + c(-1,1)*qt(0.975,18)*sp*sqrt(1/10 + 1/10)
t.test(g2, g1, paired = FALSE, var.equal = TRUE)$conf
t.test(g2, g1, paired = TRUE)$conf
num <- (15.34^2/8 + 18.23^2/21)^2
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf <- num/den
132.86 - 127.44 + c(-1,1)*qt(0.975, mydf)*sqrt(15.34^2/8 + 18.23^2/21)
library(swirl)
swirl()
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = . ~ drv, method = "loess")
g <- ggplot(mpg, aes(displ, hwy))
g
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth(method = "lm") + facet_grid(. ~ drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid(. ~ drv) + ggtitle("Swirl Rules!")
g + geom_point(color = "pink", size = 4, alpha = 1/2)
g + geom_point(size = 4, alpha = 1/2, aes(color = drv))
g + geom_point(color = drv) + labs(title = "Swirl Rules!", x = "Displacement", y = "Hwy Mileage")
g + geom_point(color = drv) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!", x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv), size = 2, alpha = 1/2) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FLASE)
g + geom_point(aes(color = drv), size = 2, alpha = 1/2) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3, 3))
g + testdat() + aes(x = myx, y = myy)
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE)
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
diamonds
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(corat, price, data = diamonds)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"), method = "lm")
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"), method = "lm", facets = . ~ cut)
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(.~cut)
hist(rexp(40, mean = 1/0.2, sd = 1/0.2))
rexp(40, 0.2)
hist(rexp(40, 0.2))
hist(rexp(1000, 0.2))
mns <- NULL
for (i in 1:1000) mns <- c(mns, mean(rexp(40, rate = 0.2)))
hist(mns)
ggplot(mns)
qplot(mns)
?qplot
?vline
??vline
qplot(mns) + geom_vline(intercept = 0)
qplot(mns) + geom_vline(intercept = 5)
qplot(mns) + geom_vline(intercept = 3)
qplot(mns) + geom_vline(intercept = 3, size = 2)
hist(mns)
abline(v = 5)
?abline
abline(v = 5, lwd = 2)
abline(v = 5, lwd = 3)
mean(mns)
abline(v = mean(mns), lwd = 3)
library(swirl)
swirl()
10/sqrt(100)
2
(32 - 30)/(10/sqrt(16))
15
qt(0.95, 15)
dim(fs)
t.test(fs$sheight, fs$fheight, paired = TRUE)
11.7885 * sd(fs$sheight - fs$fheight)/sqrt(1078)
mybin
8
pt(2.5, df = 15, lower.tail = FALSE)
qnorm(0.95)
qnorm(0.99)
pnorm(2)
pnorm(2, lower.tail = FALSE)
mybin
pbinom(6, size = 8, prob = .5, lower.tail = FALSE)
pbinom(7, size = 8, prob = .5, lower.tail = TRUE)
ppois(9, lambda = 5, lower.tail = FALSE)
library(UsingR)
data(galton)
par(mfrow = c(1,2))
hist(galton$child, col = "blue", breaks = 100)
hist(galton$parent, col = "blue", breaks = 100)
library(manipulate)
library(manipulate)
myHist <- function(mu){
hist(galton$child, col = "blue", breaks = 100)
lines(c(mu, mu), c(0, 150), col = "red", lwd = 5)
mse <- mean((galton$child - mu)^2)
text(63, 150, paste("mu = ", mu))
text(63, 140, paste("MSE = ", round(mse, 2)))
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
dev.off()
library(manipulate)
myHist <- function(mu){
hist(galton$child, col = "blue", breaks = 100)
lines(c(mu, mu), c(0, 150), col = "red", lwd = 5)
mse <- mean((galton$child - mu)^2)
text(63, 150, paste("mu = ", mu))
text(63, 140, paste("MSE = ", round(mse, 2)))
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
mean(galton$child)
plot(galton$parent, galton$child, pch = 19, col = "blue")
setwd("~/Desktop/Git/designmat")
library(swirl)
swirl()
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z <- qnorm(.95)
pnorm(30+z, mean = 30, lower.tail = FALSE)
pnorm(30+z, mean = 32, lower.tail = FALSE)
pnorm(30+z, mean = 32, sd = 1, lower.tail = FALSE)
pnorm(30+z, mean = 32, sd = 2, lower.tail = FALSE)
pnorm(30+z*2, mean = 32, sd = 2, lower.tail = FALSE)
power.t.test(n = 16, delta = 2 / 4, sd = 1, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 2, sd = 4, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 100, sd = 200, type = "one.sample", alt = "one.sided")$power
power.t.test(power = .8, delta = 2/4, sd = 1, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 2, sd = 4, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 100, sd = 200, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, n = 26, sd = 1, type = "one.sample", alt = "one.sided")$delta
power.t.test(power = .8, n = 27, sd = 1, type = "one.sample", alt = "one.sided")$delta
?vapply
